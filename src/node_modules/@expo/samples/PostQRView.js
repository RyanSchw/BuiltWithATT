import React from 'react';
import { Image, StyleSheet, Text, View, Platform, ScrollView } from 'react-native';
import Touchable from 'react-native-platform-touchable';
import { withNavigation } from 'react-navigation';

import { MonoText } from '../../../components/StyledText';

class PostQRView extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      navigation: this.props.navigation
    }
  }

  render() {
    try {
      dispatch.doorStatus = this.state.navigation.state.params.successCode;
    }
    catch(err) {
      
    }
    return (
      <View>
        <Text style={styles.optionsTitleText}>Actions</Text>

        <Touchable
          style={styles.option}
          background={Touchable.Ripple('#ccc', true)}
          onPress={this._handleOpening}>
          <View style={{ flexDirection: 'row' }}>
            <View style={styles.optionIconContainer}>
              <Image
                source={require('../../../assets/images/lockOpened.png')}
                resizeMode="contain"
                fadeDuration={0}
                style={{ width: 20, height: 20, marginTop: 1 }}
              />
            </View>
            <View style={styles.optionTextContainer}>
              <Text style={styles.optionText}>Open door</Text>
            </View>
          </View>
        </Touchable>

        <Touchable
          style={styles.option}
          background={Touchable.Ripple('#ccc', true)}
          onPress={this._handleClosing}>
          <View style={{ flexDirection: 'row' }}>
            <View style={styles.optionIconContainer}>
              <Image
                source={require('../../../assets/images/lockClosed.png')}
                resizeMode="contain"
                fadeDuration={0}
                style={{ width: 20, height: 20, marginTop: 1 }}
              />
            </View>
            <View style={styles.optionTextContainer}>
              <Text style={styles.optionText}>Close door</Text>
            </View>
          </View>
        </Touchable>

        <Touchable
          style={styles.option}
          background={Touchable.Ripple('#ccc', true)}
          onPress={this._handleDevOptions}>
          <View style={{ flexDirection: 'row' }}>
            <View style={styles.optionIconContainer}>
              <Image
                source={require('../../../assets/images/dev.png')}
                resizeMode="contain"
                fadeDuration={0}
                style={{ width: 20, height: 20, marginTop: 1 }}
              />
            </View>
            <View style={styles.optionTextContainer}>
              <Text style={styles.optionText}>Developer options</Text>
            </View>
          </View>
        </Touchable>

        {/* <View style={styles.tabBarInfoContainer}>
        <Text style={styles.tabBarInfoText}>
          Door is currently:
        </Text>

        <View
          style={[styles.codeHighlightContainer, styles.navigationFilename]}>
          <MonoText style={styles.codeHighlightText}>
            {dispatch.doorStatus}
          </MonoText>
        </View>
        </View> */}
      </View>
    );
  }

  _handleOpening = () => {
    let request = new XMLHttpRequest();
    request.open("POST", 'https://firstnethackathon.herokuapp.com/api/doorEntry', true);
    request.setRequestHeader('Content-Type', 'text/plain');
    request.send(`${dispatch.qrCode}1`);
    dispatch.doorStatus = 'Open';
  };

  _handleClosing = () => {
    let request = new XMLHttpRequest();
    request.open("POST", 'https://firstnethackathon.herokuapp.com/api/doorEntry', true);
    request.setRequestHeader('Content-Type', 'text/plain');
    request.send(`${dispatch.qrCode}0`);
    dispatch.doorStatus = 'Closed';
  };

  _handleDevOptions = () => {
    this.state.navigation.navigate('DevOps');
  };
}

export default withNavigation(PostQRView);

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingTop: 15,
  },
  optionsTitleText: {
    fontSize: 16,
    marginLeft: 15,
    marginTop: 9,
    marginBottom: 12,
  },
  optionIconContainer: {
    marginRight: 9,
  },
  option: {
    backgroundColor: '#fdfdfd',
    paddingHorizontal: 15,
    paddingVertical: 15,
    borderBottomWidth: StyleSheet.hairlineWidth,
    borderBottomColor: '#EDEDED',
  },
  optionText: {
    fontSize: 15,
    marginTop: 1,
  },
  tabBarInfoContainer: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    ...Platform.select({
      ios: {
        shadowColor: 'black',
        shadowOffset: { width: 0, height: -3 },
        shadowOpacity: 0.1,
        shadowRadius: 3,
      },
      android: {
        elevation: 20,
      },
    }),
    alignItems: 'center',
    backgroundColor: '#fbfbfb',
    paddingVertical: 20,
  },
});
