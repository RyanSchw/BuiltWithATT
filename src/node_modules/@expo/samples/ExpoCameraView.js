import React from 'react';
import { Text, View, StyleSheet, Button, TouchableOpacity, Alert } from 'react-native';
import * as Permissions from 'expo-permissions';
import { Camera } from 'expo-camera';
import { BarCodeScanner } from 'expo-barcode-scanner';
import { withNavigation } from 'react-navigation';
import { reset } from 'expo/build/AR';

class CameraView extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
          navigation: this.props.navigation,
          successCode: 'Closed'
        }
      }
    state = {
        hasCameraPermission: null,
        type: Camera.Constants.Type.back,
        scanned: false,
    };

    async componentDidMount() {
        const { status } = await Permissions.askAsync(Permissions.CAMERA);
        this.setState({ hasCameraPermission: status === 'granted' });
    }

    handleBarCodeScanned = ({ type, data }) => {
        this.setState({ scanned: true, shouldNotScan: true });
        dispatch.qrCode = data;
        let request = new XMLHttpRequest();
        request.open("POST", 'https://firstnethackathon.herokuapp.com/api/doorEntry', true);
        request.setRequestHeader('Content-Type', 'text/plain');
        request.send(`${dispatch.qrCode}1`);
        setTimeout(() => this.setState({ scanned: false }), 10000);
        this.state.navigation.navigate('PostQR', {successCode: 'Open'});
    };

    render() {
        const { hasCameraPermission, scanned, shouldNotScan } = this.state;
        if (hasCameraPermission === null) {
            return <View />;
        } else if (hasCameraPermission === false) {
            return <Text>No access to camera</Text>;
        } else {
            return (
                <View
                    style={{
                        flex: 1,
                        flexDirection: 'column',
                        justifyContent: 'flex-end',
                    }}>
                    <BarCodeScanner
                        onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}
                        style={StyleSheet.absoluteFillObject}
                    />
                </View>
            );
        }
    }
}

export default withNavigation(CameraView);